% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/machine_learn.R
\name{machine_learn}
\alias{machine_learn}
\title{Machine Learn}
\usage{
machine_learn(d, outcome, ..., models = c("rf", "knn"), impute = TRUE)
}
\arguments{
\item{d}{A data frame}

\item{outcome}{Name of the target column, i.e. what you want to predict.
Unquoted.}

\item{...}{Identifier columns not to be used in model training, unquoted}

\item{models}{Models to be trained, k-nearest neighbors and random forest by
default. See \code{\link{supported_models}} for details.}

\item{impute}{Logical, if TRUE (default) missing values will be filled by
\code{\link{hcai_impute}}}
}
\value{
model_list object ready to make predictions via
  \code{\link{predict.model_list}}
}
\description{
Prepare data and train machine learning models.
}
\details{
This is a high-level wrapper function. For finer control of data
  cleaning and preparation use \code{\link{prep_data}} or the functions it
  wraps. For finer control of model tuning use \code{\link{tune_models}}.
}
\examples{
# Split data into training and test sets using a subset of the data for speed
test_data <- pima_diabetes[1:10, ]
training_data <- pima_diabetes[11:100, ]

### Classification ###

# Clean and prep the data, tune algorithms over hyperparameter values to predict diabetes
models <- machine_learn(training_data, diabetes)

# Make predictions (predicted probability of diabetes) on test data
predict(models, test_data)

### Regression ###

# Predict numeric outcomes simply by specifying the name of the outcome variable
age_model <- machine_learn(training_data, age)

# If new data isn't specifed, get predictions on training data
predict(age_model)
}
